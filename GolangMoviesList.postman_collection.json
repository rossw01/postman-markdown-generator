{
	"info": {
		"_postman_id": "ab7ca2d3-8a2d-46af-9f64-32ded5dd9f9e",
		"name": "GolangMoviesList",
		"description": "Golang + Gin/Gorm Backend API for handling user registration/login (using JWT for auth) and Review CRUD functions.\n\nMovie IDs that correspond to those found in The Movie Database's API.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27922914"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "RegisterUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test2\",\r\n    \"password\": \"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"register"
							]
						},
						"description": "Registers a user."
					},
					"response": []
				},
				{
					"name": "GetUserByID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"6"
							]
						},
						"description": "Returns the user with corresponding user ID."
					},
					"response": []
				},
				{
					"name": "UpdateUser",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test2\",\r\n    \"password\": \"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/user/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"4"
							]
						},
						"description": "Updates specified user's login details. (WIP)."
					},
					"response": []
				},
				{
					"name": "DeleteUser",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/user/3",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"user",
								"3"
							]
						},
						"description": "Deletes a user with the corresponding user ID."
					},
					"response": []
				},
				{
					"name": "LoginUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"test\",\r\n    \"password\": \"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"login"
							]
						},
						"description": "Logs the user in.\n\nIf login attempt is successful, a cookie containing a JWT called \"jwt\" is returned in the response."
					},
					"response": []
				}
			]
		},
		{
			"name": "Review",
			"item": [
				{
					"name": "CreateReview",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"authorId\": 2,\r\n    \"movieId\": \"19995\",\r\n    \"rating\": 2.5,\r\n    \"subject\": \"i love this film!!\",\r\n    \"body\": \"FUNNY blue men!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/review",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"review"
							]
						},
						"description": "Generates a review."
					},
					"response": []
				},
				{
					"name": "GetReviewsByMovieID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/review/19995",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"review",
								"19995"
							]
						},
						"description": "Returns all reviews with specified movie ID."
					},
					"response": []
				},
				{
					"name": "DeleteReview",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/review/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"review",
								"5"
							]
						},
						"description": "Deletes review with corresponding movie ID."
					},
					"response": []
				},
				{
					"name": "UpdateReview",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"movieId\": \"19995\",\r\n    \"rating\": 4.0,\r\n    \"subject\": \"i LOVE this film!!\",\r\n    \"body\": \"Funny blue men!\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/review/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"review",
								"2"
							]
						},
						"description": "Updates review with corresponding review ID.\n\nCustom middleware prevents user from editing reviews they didn't author."
					},
					"response": []
				},
				{
					"name": "GetAvgRatingByMovieID",
					"request": {
						"method": "GET",
						"header": [],
						"description": "Returns the average rating of reviews containing specified Movie ID as a float.\n\n\\-1 is returned if no reviews have been created with the specified Movie ID."
					},
					"response": []
				},
				{
					"name": "GetMoviesByAuthor",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/review/user/username",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"review",
								"user",
								"username"
							]
						},
						"description": "Returns a list of all of the reviews with corresponding username."
					},
					"response": []
				}
			]
		}
	]
}